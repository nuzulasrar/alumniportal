{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UCYP\\\\Desktop\\\\react\\\\alumniportal\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [login, setLogin] = useState(0);\n  const [dontredirect, setDontRedirect] = useState(false);\n  const [goredirect, setGoRedirect] = useState(false);\n  const [idd, setIdd] = useState(0);\n  const [isSubmit, setIsSubmit] = useState(true);\n  useEffect(() => {\n    const authenticate = () => {\n      let idalumni = new URLSearchParams(window.location.search).get(\"idalumni\");\n      setIsSubmit(false);\n\n      if (idalumni != null) {\n        // alert(idalumni);\n        setLogin(1);\n        setDontRedirect(true);\n      } else {\n        setGoRedirect(true);\n      }\n    };\n\n    if (isSubmit) authenticate();\n  }, [isSubmit]);\n  useEffect(() => {\n    const updateDontRedirect = () => {\n      setDontRedirect(false); //   alert(login);\n      //   if (login != 1) {\n      //     // return <Navigate replace to=\"/login\" />;\n      //     // window.location.href = \"/edit-student/1\";\n      //     window.location.href = \"/login\";\n      //   }\n    };\n\n    if (dontredirect) updateDontRedirect();\n  }, [dontredirect]);\n  useEffect(() => {\n    const updateGoRedirect = () => {\n      window.location.href = \"/login\";\n    };\n\n    if (goredirect) updateGoRedirect();\n  }, [goredirect]);\n  const [checkstudent, setCheckstudent] = useState(true);\n  useEffect(() => {\n    const getstudentdata = async () => {\n      axios.get(`https://alumniportal.ucyp.edu.my/api/getsession`).then(res => {\n        setCheckstudent(false); //navigate users based on the response\n\n        if (res.data.statusCode === 200) {\n          setName(res.data.student.name);\n          setCourse(res.data.student.course);\n          setEmail(res.data.student.email);\n          setPhone(res.data.student.phone);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    if (checkstudent) getstudentdata();\n  }, [checkstudent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"main\",\n      class: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pagetitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Blank Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            class: \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"breadcrumb-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"index.html\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"breadcrumb-item\",\n              children: \"Pages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"breadcrumb-item active\",\n              children: \"Blank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        class: \"section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"card-title\",\n                  children: \"Example Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is an examle page with no contrnt. You can use it as a starter for your custom pages.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"card-title\",\n                  children: \"Example Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is an examle page with no contrnt. You can use it as a starter for your custom pages.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"m9glVk/NC+1qhAUW54ZXfs9MooM=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/UCYP/Desktop/react/alumniportal/src/pages/Dashboard.js"],"names":["React","useState","useEffect","Header","Navigate","useParams","axios","Dashboard","login","setLogin","dontredirect","setDontRedirect","goredirect","setGoRedirect","idd","setIdd","isSubmit","setIsSubmit","authenticate","idalumni","URLSearchParams","window","location","search","get","updateDontRedirect","updateGoRedirect","href","checkstudent","setCheckstudent","getstudentdata","then","res","data","statusCode","setName","student","name","setCourse","course","setEmail","email","setPhone","phone","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Dashboard = () => {\r\n  const [login, setLogin] = useState(0);\r\n  const [dontredirect, setDontRedirect] = useState(false);\r\n  const [goredirect, setGoRedirect] = useState(false);\r\n  const [idd, setIdd] = useState(0);\r\n\r\n  const [isSubmit, setIsSubmit] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const authenticate = () => {\r\n      let idalumni = new URLSearchParams(window.location.search).get(\r\n        \"idalumni\"\r\n      );\r\n      setIsSubmit(false);\r\n\r\n      if (idalumni != null) {\r\n        // alert(idalumni);\r\n        setLogin(1);\r\n        setDontRedirect(true);\r\n      } else {\r\n        setGoRedirect(true);\r\n      }\r\n    };\r\n    if (isSubmit) authenticate();\r\n  }, [isSubmit]);\r\n\r\n  useEffect(() => {\r\n    const updateDontRedirect = () => {\r\n      setDontRedirect(false);\r\n\r\n      //   alert(login);\r\n\r\n      //   if (login != 1) {\r\n      //     // return <Navigate replace to=\"/login\" />;\r\n      //     // window.location.href = \"/edit-student/1\";\r\n      //     window.location.href = \"/login\";\r\n      //   }\r\n    };\r\n    if (dontredirect) updateDontRedirect();\r\n  }, [dontredirect]);\r\n\r\n  useEffect(() => {\r\n    const updateGoRedirect = () => {\r\n      window.location.href = \"/login\";\r\n    };\r\n    if (goredirect) updateGoRedirect();\r\n  }, [goredirect]);\r\n\r\n  const [checkstudent, setCheckstudent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getstudentdata = async () => {\r\n      axios\r\n        .get(`https://alumniportal.ucyp.edu.my/api/getsession`)\r\n        .then((res) => {\r\n          setCheckstudent(false);\r\n          //navigate users based on the response\r\n\r\n          if (res.data.statusCode === 200) {\r\n            setName(res.data.student.name);\r\n            setCourse(res.data.student.course);\r\n            setEmail(res.data.student.email);\r\n            setPhone(res.data.student.phone);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (checkstudent) getstudentdata();\r\n  }, [checkstudent]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <main id=\"main\" class=\"main\">\r\n        <div class=\"pagetitle\">\r\n          <h1>Blank Page</h1>\r\n          <nav>\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\">\r\n                <a href=\"index.html\">Home</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item\">Pages</li>\r\n              <li class=\"breadcrumb-item active\">Blank</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n\r\n        <section class=\"section\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">Example Card</h5>\r\n                  <p>\r\n                    This is an examle page with no contrnt. You can use it as a\r\n                    starter for your custom pages.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">Example Card</h5>\r\n                  <p>\r\n                    This is an examle page with no contrnt. You can use it as a\r\n                    starter for your custom pages.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}